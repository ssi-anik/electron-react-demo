name: Release Electron App
on:
  push:
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Create release tag
    runs-on: ubuntu-latest
    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

#       - name: Get release name
#         id: release_name
#         run: echo ::set-output name=name::$(jq --arg date ${{ steps.date.outputs.result }} --arg run ${{ github.run_number }} -r '.version = .version+"-"+$date+"-"+$run ' package.json  | jq -r '.version')

      - name: Get release name
        id: release_name
        run: echo ::set-output name=name::`node ./scripts/get-release-name.js ${{ github.run_number }}`
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "Assets for the release ${{ steps.release_name.outputs.name }}" # Release description
          draft: false
          prerelease: false
          name: ${{ steps.release_name.outputs.name }} # Release name
          tag_name: ${{ steps.release_name.outputs.name }} # Tag name

  publish:
    needs: [release]
    name: Build & Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: ubuntu-latest
            make_command: "yarn run make-linux --arch=all"
          
          - os: macos-latest
            make_command: "yarn run make-mac"
          
          - os: windows-latest
            make_command: "yarn run make-windows"
    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

#       - name: Get package version
#         id: package
#         run: echo ::set-output name=version::`node ./scripts/get-package-version.js`

#       - name: Get tag name
#         id: tag
#         run: echo ::set-output name=name::`echo ${{ steps.package.outputs.version }}-build-${{ github.run_number }}`
      - name: Get tag name
        id: tag
        run: echo ::set-output name=name::`node ./scripts/get-release-name.js ${{ github.run_number }}`

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache match
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ matrix.os }}-yarn-

      - name: Install project dependencies
        run: yarn install --prefer-offline

      - name: Make application
        run: ${{ matrix.make_command }}

      - name: Release asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.name }}
          draft: false
          files: |
            out/**/*.deb
            out/**/*.dmg
            out/**/*setup*.exe
            out/**/*.nupkg
            out/**/*.rpm
            out/**/*.zip
